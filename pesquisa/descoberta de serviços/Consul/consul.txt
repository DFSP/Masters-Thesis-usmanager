> Consul


Run each Consul agent in either in server or client mode. Each Consul datacenter must have at least one server, which is responsible for maintaining Consul's state.
either three or five servers in production
Never run Consul in -dev mode in production.
container orchestration platforms can register services automatically via integrations.
In production we strongly recommend -enable-local-script-checks instead.
and first-class support for Envoy, which you should use for production deployments

Because sidecar proxies connect your registered services, Consul's service mesh feature is called Consul Connect.

Consul clients can not function without a server. All datacenters must have at least one agent running in server mode for Consul to function correctly.


Install:
wget https://releases.hashicorp.com/consul/1.6.1/consul_1.6.1_linux_amd64.zip
unzip consul_*
sudo mv consul /usr/bin


Run locally in development mode:
consul agent -dev
consul members


Service discovery manually:
mkdir /etc/consul.d
echo '{"service":
  {"name": "web",
   "tags": ["rails"],
   "port": 80
  }
}' > ./etc/consul.d/web.json
consul agent -dev -enable-script-checks -config-dir=./etc/consul.d
dig @127.0.0.1 -p 8600 web.service.consul
dig @127.0.0.1 -p 8600 web.service.consul SRV
dig @127.0.0.1 -p 8600 rails.web.service.consul
echo '{"service":
  {"name": "web",
    "tags": ["rails"],
    "port": 80,
    "check": {
      "args": ["curl", "localhost"],
      "interval": "10s"
    }
  }
}' > ./consul.d/web.json
consul reload
dig @127.0.0.1 -p 8600 web.service.consul


Using Consul Connect:
socat -v tcp-l:8181,fork exec:"/bin/cat"
nc 127.0.0.1 8181
echo '{
  "service": {
    "name": "socat",
    "port": 8181,
    "connect": { "sidecar_service": {} }
  }
}' > ./consul.d/socat.json
consul reload
consul connect proxy -sidecar-for socat
echo '{"service": {
    "name": "web",
    "port": 8080,
    "connect": {
      "sidecar_service": {
        "proxy": {
          "upstreams": [{
             "destination_name": "socat",
             "local_bind_port": 9191
          }]
        }
      }
    }
  }
}' > ./consul.d/web.json
consul reload
consul connect proxy -sidecar-for web
nc 127.0.0.1 9191

Setting up a 2 VMs cluster:
mkdir consul-getting-started-join
vagrant up
vagrant ssh n1
consul agent \
  -server \
  -bootstrap-expect=1 \
  -data-dir=/tmp/consul \
  -node=agent-one \
  -bind=172.20.20.10 \
  -data-dir=/tmp/consul \
  -config-dir=/etc/consul.d
vagrant ssh n2
consul agent \
  -node=agent-two \
  -bind=172.20.20.11 \
  -enable-script-checks=true \
  -data-dir=/tmp/consul \
  -config-dir=/etc/consul.d
vagrant ssh n1
consul members
vagrant ssh n2
consul members
consul join 172.20.20.11
consul members
dig @127.0.0.1 -p 8600 agent-two.node.consul
consul leave
vagrant destroy