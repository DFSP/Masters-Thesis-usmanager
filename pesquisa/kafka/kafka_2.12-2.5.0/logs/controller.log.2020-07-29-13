[2020-07-29 13:01:35,892] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 13:01:35,893] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 13:01:35,893] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 13:01:35,893] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 13:06:35,894] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 13:06:35,895] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 13:06:35,896] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 13:06:35,896] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 13:11:35,896] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 13:11:35,896] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 13:11:35,897] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 13:11:35,897] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 13:16:35,897] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 13:16:35,898] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 13:16:35,898] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 13:16:35,898] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 13:21:35,898] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 13:21:35,899] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 13:21:35,899] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 13:21:35,899] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 13:26:35,900] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 13:26:35,900] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 13:26:35,900] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 13:26:35,900] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 13:31:35,901] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 13:31:35,901] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 13:31:35,901] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 13:31:35,901] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 13:36:35,902] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 13:36:35,902] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 13:36:35,904] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 13:36:35,904] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 13:39:22,463] DEBUG [Controller id=0] Delete topics listener fired for topics users to be deleted (kafka.controller.KafkaController)
[2020-07-29 13:39:22,464] INFO [Controller id=0] Starting topic deletion for topics users (kafka.controller.KafkaController)
[2020-07-29 13:39:22,464] INFO [Topic Deletion Manager 0] Handling deletion for topics users (kafka.controller.TopicDeletionManager)
[2020-07-29 13:39:22,464] INFO [Topic Deletion Manager 0] Deletion of topic users (re)started (kafka.controller.TopicDeletionManager)
[2020-07-29 13:39:22,472] INFO [RequestSendThread controllerId=0] Controller 0 connected to daniel:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-07-29 13:39:22,479] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=users,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-29 13:39:22,479] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=users,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-29 13:39:22,507] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(users-0 -> NONE) (kafka.controller.KafkaController)
[2020-07-29 13:39:22,507] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=users,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-07-29 13:39:22,508] INFO [Topic Deletion Manager 0] Handling deletion for topics users (kafka.controller.TopicDeletionManager)
[2020-07-29 13:39:22,521] INFO [Topic Deletion Manager 0] Deletion of topic users successfully completed (kafka.controller.TopicDeletionManager)
[2020-07-29 13:39:22,523] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-07-29 13:39:22,524] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-07-29 13:39:25,090] INFO [Controller id=0] New topics: [Set(users)], deleted topics: [Set()], new partition replica assignment [Map(users-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 13:39:25,090] INFO [Controller id=0] New partition creation callback for users-0 (kafka.controller.KafkaController)
[2020-07-29 13:41:35,906] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 13:41:35,906] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 13:41:35,908] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 13:41:35,908] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 13:42:58,058] DEBUG [Controller id=0] Delete topics listener fired for topics users to be deleted (kafka.controller.KafkaController)
[2020-07-29 13:42:58,058] INFO [Controller id=0] Starting topic deletion for topics users (kafka.controller.KafkaController)
[2020-07-29 13:42:58,058] INFO [Topic Deletion Manager 0] Handling deletion for topics users (kafka.controller.TopicDeletionManager)
[2020-07-29 13:42:58,058] INFO [Topic Deletion Manager 0] Deletion of topic users (re)started (kafka.controller.TopicDeletionManager)
[2020-07-29 13:42:58,069] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=users,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-29 13:42:58,069] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=users,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-29 13:42:58,104] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(users-0 -> NONE) (kafka.controller.KafkaController)
[2020-07-29 13:42:58,104] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=users,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-07-29 13:42:58,105] INFO [Topic Deletion Manager 0] Handling deletion for topics users (kafka.controller.TopicDeletionManager)
[2020-07-29 13:42:58,128] INFO [Topic Deletion Manager 0] Deletion of topic users successfully completed (kafka.controller.TopicDeletionManager)
[2020-07-29 13:42:58,129] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-07-29 13:42:58,131] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-07-29 13:43:14,540] INFO [Controller id=0] New topics: [Set(users)], deleted topics: [Set()], new partition replica assignment [Map(users-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 13:43:14,540] INFO [Controller id=0] New partition creation callback for users-0 (kafka.controller.KafkaController)
[2020-07-29 13:46:35,910] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 13:46:35,910] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 13:46:35,913] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 13:46:35,913] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 13:51:35,913] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 13:51:35,915] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 13:51:35,916] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 13:51:35,917] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 13:56:35,917] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 13:56:35,918] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 13:56:35,919] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 13:56:35,919] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
