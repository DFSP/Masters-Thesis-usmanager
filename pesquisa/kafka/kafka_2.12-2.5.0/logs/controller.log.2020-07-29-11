[2020-07-29 11:01:35,853] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 11:01:35,854] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 11:01:35,854] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 11:01:35,854] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 11:06:35,854] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 11:06:35,854] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 11:06:35,854] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 11:06:35,855] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 11:11:35,855] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 11:11:35,855] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 11:11:35,856] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 11:11:35,856] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 11:16:35,856] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 11:16:35,856] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 11:16:35,856] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 11:16:35,856] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 11:21:35,856] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 11:21:35,858] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 11:21:35,859] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 11:21:35,859] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 11:26:35,859] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 11:26:35,861] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 11:26:35,862] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 11:26:35,862] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 11:31:35,862] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 11:31:35,862] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 11:31:35,862] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 11:31:35,862] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 11:36:35,862] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 11:36:35,862] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 11:36:35,863] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 11:36:35,863] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 11:41:35,864] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 11:41:35,864] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 11:41:35,864] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 11:41:35,864] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 11:46:35,865] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 11:46:35,865] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 11:46:35,865] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 11:46:35,866] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 11:50:55,182] DEBUG [Controller id=0] Delete topics listener fired for topics users to be deleted (kafka.controller.KafkaController)
[2020-07-29 11:50:55,182] INFO [Controller id=0] Starting topic deletion for topics users (kafka.controller.KafkaController)
[2020-07-29 11:50:55,182] INFO [Topic Deletion Manager 0] Handling deletion for topics users (kafka.controller.TopicDeletionManager)
[2020-07-29 11:50:55,183] INFO [Topic Deletion Manager 0] Deletion of topic users (re)started (kafka.controller.TopicDeletionManager)
[2020-07-29 11:50:55,186] INFO [RequestSendThread controllerId=0] Controller 0 connected to daniel:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-07-29 11:50:55,194] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=users,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-29 11:50:55,195] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=users,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-29 11:50:55,221] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(users-0 -> NONE) (kafka.controller.KafkaController)
[2020-07-29 11:50:55,221] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=users,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-07-29 11:50:55,222] INFO [Topic Deletion Manager 0] Handling deletion for topics users (kafka.controller.TopicDeletionManager)
[2020-07-29 11:50:55,252] INFO [Topic Deletion Manager 0] Deletion of topic users successfully completed (kafka.controller.TopicDeletionManager)
[2020-07-29 11:50:55,253] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-07-29 11:50:55,254] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-07-29 11:51:02,248] INFO [Controller id=0] New topics: [Set(users)], deleted topics: [Set()], new partition replica assignment [Map(users-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 11:51:02,248] INFO [Controller id=0] New partition creation callback for users-0 (kafka.controller.KafkaController)
[2020-07-29 11:51:35,866] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 11:51:35,866] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 11:51:35,866] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 11:51:35,866] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 11:54:50,573] DEBUG [Controller id=0] Delete topics listener fired for topics users to be deleted (kafka.controller.KafkaController)
[2020-07-29 11:54:50,573] INFO [Controller id=0] Starting topic deletion for topics users (kafka.controller.KafkaController)
[2020-07-29 11:54:50,573] INFO [Topic Deletion Manager 0] Handling deletion for topics users (kafka.controller.TopicDeletionManager)
[2020-07-29 11:54:50,574] INFO [Topic Deletion Manager 0] Deletion of topic users (re)started (kafka.controller.TopicDeletionManager)
[2020-07-29 11:54:50,579] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=users,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-29 11:54:50,579] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=users,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-29 11:54:50,601] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(users-0 -> NONE) (kafka.controller.KafkaController)
[2020-07-29 11:54:50,601] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=users,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-07-29 11:54:50,601] INFO [Topic Deletion Manager 0] Handling deletion for topics users (kafka.controller.TopicDeletionManager)
[2020-07-29 11:54:50,620] INFO [Topic Deletion Manager 0] Deletion of topic users successfully completed (kafka.controller.TopicDeletionManager)
[2020-07-29 11:54:50,621] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-07-29 11:54:50,623] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-07-29 11:54:55,602] INFO [Controller id=0] New topics: [Set(users)], deleted topics: [Set()], new partition replica assignment [Map(users-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 11:54:55,602] INFO [Controller id=0] New partition creation callback for users-0 (kafka.controller.KafkaController)
[2020-07-29 11:56:33,736] DEBUG [Controller id=0] Delete topics listener fired for topics users to be deleted (kafka.controller.KafkaController)
[2020-07-29 11:56:33,736] INFO [Controller id=0] Starting topic deletion for topics users (kafka.controller.KafkaController)
[2020-07-29 11:56:33,736] INFO [Topic Deletion Manager 0] Handling deletion for topics users (kafka.controller.TopicDeletionManager)
[2020-07-29 11:56:33,736] INFO [Topic Deletion Manager 0] Deletion of topic users (re)started (kafka.controller.TopicDeletionManager)
[2020-07-29 11:56:33,739] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=users,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-29 11:56:33,739] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=users,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-29 11:56:33,755] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(users-0 -> NONE) (kafka.controller.KafkaController)
[2020-07-29 11:56:33,755] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=users,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-07-29 11:56:33,755] INFO [Topic Deletion Manager 0] Handling deletion for topics users (kafka.controller.TopicDeletionManager)
[2020-07-29 11:56:33,779] INFO [Topic Deletion Manager 0] Deletion of topic users successfully completed (kafka.controller.TopicDeletionManager)
[2020-07-29 11:56:33,780] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-07-29 11:56:33,780] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-07-29 11:56:35,866] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 11:56:35,866] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 11:56:35,866] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 11:56:35,866] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 11:56:38,489] INFO [Controller id=0] New topics: [Set(users)], deleted topics: [Set()], new partition replica assignment [Map(users-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 11:56:38,489] INFO [Controller id=0] New partition creation callback for users-0 (kafka.controller.KafkaController)
