[2020-07-29 21:04:20,605] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 21:04:20,607] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 21:04:20,608] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 21:04:20,608] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 21:09:20,609] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 21:09:20,609] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 21:09:20,609] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 21:09:20,609] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 21:14:20,610] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 21:14:20,610] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 21:14:20,610] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 21:14:20,610] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 21:19:20,611] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 21:19:20,611] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 21:19:20,611] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 21:19:20,611] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 21:19:24,662] DEBUG [Controller id=0] Delete topics listener fired for topics users to be deleted (kafka.controller.KafkaController)
[2020-07-29 21:19:24,663] INFO [Controller id=0] Starting topic deletion for topics users (kafka.controller.KafkaController)
[2020-07-29 21:19:24,663] INFO [Topic Deletion Manager 0] Handling deletion for topics users (kafka.controller.TopicDeletionManager)
[2020-07-29 21:19:24,663] INFO [Topic Deletion Manager 0] Deletion of topic users (re)started (kafka.controller.TopicDeletionManager)
[2020-07-29 21:19:24,665] INFO [RequestSendThread controllerId=0] Controller 0 connected to daniel:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-07-29 21:19:24,675] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=users,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-29 21:19:24,676] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=users,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-29 21:19:24,692] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(users-0 -> NONE) (kafka.controller.KafkaController)
[2020-07-29 21:19:24,693] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=users,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-07-29 21:19:24,693] INFO [Topic Deletion Manager 0] Handling deletion for topics users (kafka.controller.TopicDeletionManager)
[2020-07-29 21:19:24,712] INFO [Topic Deletion Manager 0] Deletion of topic users successfully completed (kafka.controller.TopicDeletionManager)
[2020-07-29 21:19:24,714] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-07-29 21:19:24,715] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-07-29 21:19:24,817] INFO [Controller id=0] New topics: [Set(users)], deleted topics: [Set()], new partition replica assignment [Map(users-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 21:19:24,817] INFO [Controller id=0] New partition creation callback for users-0 (kafka.controller.KafkaController)
[2020-07-29 21:19:51,572] DEBUG [Controller id=0] Delete topics listener fired for topics users to be deleted (kafka.controller.KafkaController)
[2020-07-29 21:19:51,572] INFO [Controller id=0] Starting topic deletion for topics users (kafka.controller.KafkaController)
[2020-07-29 21:19:51,572] INFO [Topic Deletion Manager 0] Handling deletion for topics users (kafka.controller.TopicDeletionManager)
[2020-07-29 21:19:51,572] INFO [Topic Deletion Manager 0] Deletion of topic users (re)started (kafka.controller.TopicDeletionManager)
[2020-07-29 21:19:51,579] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=users,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-29 21:19:51,579] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=users,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-29 21:19:51,601] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(users-0 -> NONE) (kafka.controller.KafkaController)
[2020-07-29 21:19:51,601] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=users,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-07-29 21:19:51,601] INFO [Topic Deletion Manager 0] Handling deletion for topics users (kafka.controller.TopicDeletionManager)
[2020-07-29 21:19:51,617] INFO [Topic Deletion Manager 0] Deletion of topic users successfully completed (kafka.controller.TopicDeletionManager)
[2020-07-29 21:19:51,617] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-07-29 21:19:51,618] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-07-29 21:24:20,612] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 21:24:20,612] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 21:24:20,612] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 21:24:20,612] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 21:29:07,773] INFO [Controller id=0] New topics: [Set(users)], deleted topics: [Set()], new partition replica assignment [Map(users-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 21:29:07,773] INFO [Controller id=0] New partition creation callback for users-0 (kafka.controller.KafkaController)
[2020-07-29 21:29:20,613] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 21:29:20,613] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 21:29:20,614] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 21:29:20,614] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 21:34:20,614] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 21:34:20,616] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 21:34:20,616] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 21:34:20,616] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 21:39:20,617] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 21:39:20,618] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 21:39:20,619] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 21:39:20,619] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
