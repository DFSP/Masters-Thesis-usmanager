[2020-07-29 15:02:59,557] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 15:02:59,557] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 15:02:59,558] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 15:02:59,558] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 15:04:03,179] DEBUG [Controller id=0] Delete topics listener fired for topics users to be deleted (kafka.controller.KafkaController)
[2020-07-29 15:04:03,179] INFO [Controller id=0] Starting topic deletion for topics users (kafka.controller.KafkaController)
[2020-07-29 15:04:03,179] INFO [Topic Deletion Manager 0] Handling deletion for topics users (kafka.controller.TopicDeletionManager)
[2020-07-29 15:04:03,179] INFO [Topic Deletion Manager 0] Deletion of topic users (re)started (kafka.controller.TopicDeletionManager)
[2020-07-29 15:04:03,184] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=users,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-29 15:04:03,184] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=users,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-29 15:04:03,206] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(users-0 -> NONE) (kafka.controller.KafkaController)
[2020-07-29 15:04:03,206] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=users,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-07-29 15:04:03,206] INFO [Topic Deletion Manager 0] Handling deletion for topics users (kafka.controller.TopicDeletionManager)
[2020-07-29 15:04:03,230] INFO [Topic Deletion Manager 0] Deletion of topic users successfully completed (kafka.controller.TopicDeletionManager)
[2020-07-29 15:04:03,232] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-07-29 15:04:03,232] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-07-29 15:04:07,136] INFO [Controller id=0] New topics: [Set(users)], deleted topics: [Set()], new partition replica assignment [Map(users-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 15:04:07,136] INFO [Controller id=0] New partition creation callback for users-0 (kafka.controller.KafkaController)
[2020-07-29 15:04:51,096] DEBUG [Controller id=0] Delete topics listener fired for topics users to be deleted (kafka.controller.KafkaController)
[2020-07-29 15:04:51,096] INFO [Controller id=0] Starting topic deletion for topics users (kafka.controller.KafkaController)
[2020-07-29 15:04:51,096] INFO [Topic Deletion Manager 0] Handling deletion for topics users (kafka.controller.TopicDeletionManager)
[2020-07-29 15:04:51,096] INFO [Topic Deletion Manager 0] Deletion of topic users (re)started (kafka.controller.TopicDeletionManager)
[2020-07-29 15:04:51,101] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=users,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-29 15:04:51,101] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=users,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-29 15:04:51,113] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(users-0 -> NONE) (kafka.controller.KafkaController)
[2020-07-29 15:04:51,113] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=users,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-07-29 15:04:51,114] INFO [Topic Deletion Manager 0] Handling deletion for topics users (kafka.controller.TopicDeletionManager)
[2020-07-29 15:04:51,129] INFO [Topic Deletion Manager 0] Deletion of topic users successfully completed (kafka.controller.TopicDeletionManager)
[2020-07-29 15:04:51,130] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-07-29 15:04:51,130] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-07-29 15:04:57,336] INFO [Controller id=0] New topics: [Set(users)], deleted topics: [Set()], new partition replica assignment [Map(users-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 15:04:57,336] INFO [Controller id=0] New partition creation callback for users-0 (kafka.controller.KafkaController)
[2020-07-29 15:07:59,558] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 15:07:59,558] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 15:07:59,560] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 15:07:59,560] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 15:12:59,560] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 15:12:59,561] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 15:12:59,562] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 15:12:59,562] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 15:17:59,563] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 15:17:59,563] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 15:17:59,563] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 15:17:59,564] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 15:22:59,564] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 15:22:59,564] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 15:22:59,565] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 15:22:59,566] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 15:27:59,566] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 15:27:59,566] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 15:27:59,568] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 15:27:59,568] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 15:32:59,568] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 15:32:59,568] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 15:32:59,569] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 15:32:59,569] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 15:37:59,570] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 15:37:59,570] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 15:37:59,571] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 15:37:59,571] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 15:42:59,572] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 15:42:59,572] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 15:42:59,573] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 15:42:59,573] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 15:47:59,574] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 15:47:59,575] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 15:47:59,576] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 15:47:59,577] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 15:52:59,577] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 15:52:59,579] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 15:52:59,580] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 15:52:59,580] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 15:57:59,580] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 15:57:59,580] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 15:57:59,580] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 15:57:59,580] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
