[2020-07-29 00:03:08,695] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 00:03:08,700] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 00:03:08,701] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 00:03:08,701] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 00:08:08,702] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 00:08:08,702] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 00:08:08,702] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 00:08:08,703] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 00:13:08,703] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 00:13:08,703] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 00:13:08,703] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 00:13:08,703] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 00:18:08,704] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 00:18:08,704] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 00:18:08,704] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 00:18:08,704] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 00:23:08,704] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 00:23:08,704] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 00:23:08,704] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 00:23:08,704] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 00:28:08,705] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 00:28:08,705] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 00:28:08,706] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 00:28:08,706] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 00:33:08,706] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 00:33:08,706] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 00:33:08,707] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 00:33:08,707] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 00:38:08,707] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 00:38:08,709] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 00:38:08,710] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 00:38:08,710] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 00:43:08,710] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 00:43:08,710] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 00:43:08,711] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 00:43:08,711] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 00:45:19,367] INFO [Controller id=0] New topics: [Set(COMPONENT_TYPES)], deleted topics: [Set()], new partition replica assignment [Map(COMPONENT_TYPES-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 00:45:19,367] INFO [Controller id=0] New partition creation callback for COMPONENT_TYPES-0 (kafka.controller.KafkaController)
[2020-07-29 00:45:19,380] INFO [RequestSendThread controllerId=0] Controller 0 connected to daniel:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-07-29 00:45:32,041] INFO [Controller id=0] New topics: [Set(APPS)], deleted topics: [Set()], new partition replica assignment [Map(APPS-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 00:45:32,041] INFO [Controller id=0] New partition creation callback for APPS-0 (kafka.controller.KafkaController)
[2020-07-29 00:45:32,219] INFO [Controller id=0] New topics: [Set(APP_SERVICES)], deleted topics: [Set()], new partition replica assignment [Map(APP_SERVICES-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 00:45:32,219] INFO [Controller id=0] New partition creation callback for APP_SERVICES-0 (kafka.controller.KafkaController)
[2020-07-29 00:45:32,383] INFO [Controller id=0] New topics: [Set(CONDITIONS)], deleted topics: [Set()], new partition replica assignment [Map(CONDITIONS-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 00:45:32,383] INFO [Controller id=0] New partition creation callback for CONDITIONS-0 (kafka.controller.KafkaController)
[2020-07-29 00:45:32,536] INFO [Controller id=0] New topics: [Set(DECISIONS)], deleted topics: [Set()], new partition replica assignment [Map(DECISIONS-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 00:45:32,536] INFO [Controller id=0] New partition creation callback for DECISIONS-0 (kafka.controller.KafkaController)
[2020-07-29 00:45:32,688] INFO [Controller id=0] New topics: [Set(EDGE_HOSTS)], deleted topics: [Set()], new partition replica assignment [Map(EDGE_HOSTS-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 00:45:32,688] INFO [Controller id=0] New partition creation callback for EDGE_HOSTS-0 (kafka.controller.KafkaController)
[2020-07-29 00:45:32,839] INFO [Controller id=0] New topics: [Set(FIELDS)], deleted topics: [Set()], new partition replica assignment [Map(FIELDS-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 00:45:32,839] INFO [Controller id=0] New partition creation callback for FIELDS-0 (kafka.controller.KafkaController)
[2020-07-29 00:45:32,991] INFO [Controller id=0] New topics: [Set(HOST_RULES)], deleted topics: [Set()], new partition replica assignment [Map(HOST_RULES-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 00:45:32,991] INFO [Controller id=0] New partition creation callback for HOST_RULES-0 (kafka.controller.KafkaController)
[2020-07-29 00:45:33,133] INFO [Controller id=0] New topics: [Set(HOST_RULE_CONDITIONS)], deleted topics: [Set()], new partition replica assignment [Map(HOST_RULE_CONDITIONS-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 00:45:33,133] INFO [Controller id=0] New partition creation callback for HOST_RULE_CONDITIONS-0 (kafka.controller.KafkaController)
[2020-07-29 00:45:33,251] INFO [Controller id=0] New topics: [Set(OPERATORS)], deleted topics: [Set()], new partition replica assignment [Map(OPERATORS-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 00:45:33,251] INFO [Controller id=0] New partition creation callback for OPERATORS-0 (kafka.controller.KafkaController)
[2020-07-29 00:45:33,376] INFO [Controller id=0] New topics: [Set(REGIONS)], deleted topics: [Set()], new partition replica assignment [Map(REGIONS-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 00:45:33,376] INFO [Controller id=0] New partition creation callback for REGIONS-0 (kafka.controller.KafkaController)
[2020-07-29 00:45:33,499] INFO [Controller id=0] New topics: [Set(SERVICES)], deleted topics: [Set()], new partition replica assignment [Map(SERVICES-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 00:45:33,500] INFO [Controller id=0] New partition creation callback for SERVICES-0 (kafka.controller.KafkaController)
[2020-07-29 00:45:33,624] INFO [Controller id=0] New topics: [Set(SERVICE_DEPENDENCIES)], deleted topics: [Set()], new partition replica assignment [Map(SERVICE_DEPENDENCIES-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 00:45:33,624] INFO [Controller id=0] New partition creation callback for SERVICE_DEPENDENCIES-0 (kafka.controller.KafkaController)
[2020-07-29 00:45:33,753] INFO [Controller id=0] New topics: [Set(SERVICE_RULES)], deleted topics: [Set()], new partition replica assignment [Map(SERVICE_RULES-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 00:45:33,753] INFO [Controller id=0] New partition creation callback for SERVICE_RULES-0 (kafka.controller.KafkaController)
[2020-07-29 00:45:33,872] INFO [Controller id=0] New topics: [Set(SERVICE_RULE_CONDITIONS)], deleted topics: [Set()], new partition replica assignment [Map(SERVICE_RULE_CONDITIONS-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 00:45:33,872] INFO [Controller id=0] New partition creation callback for SERVICE_RULE_CONDITIONS-0 (kafka.controller.KafkaController)
[2020-07-29 00:45:33,989] INFO [Controller id=0] New topics: [Set(USERS)], deleted topics: [Set()], new partition replica assignment [Map(USERS-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 00:45:33,989] INFO [Controller id=0] New partition creation callback for USERS-0 (kafka.controller.KafkaController)
[2020-07-29 00:45:34,116] INFO [Controller id=0] New topics: [Set(VALUE_MODES)], deleted topics: [Set()], new partition replica assignment [Map(VALUE_MODES-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 00:45:34,116] INFO [Controller id=0] New partition creation callback for VALUE_MODES-0 (kafka.controller.KafkaController)
[2020-07-29 00:48:08,711] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 00:48:08,711] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 00:48:08,712] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 00:48:08,712] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 00:53:08,712] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 00:53:08,713] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 00:53:08,713] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 00:53:08,713] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 00:58:08,713] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 00:58:08,713] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 00:58:08,714] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 00:58:08,714] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 00:59:45,044] INFO [Controller id=0] New topics: [Set(worker-manager-)], deleted topics: [Set()], new partition replica assignment [Map(worker-manager--0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 00:59:45,047] INFO [Controller id=0] New partition creation callback for worker-manager--0 (kafka.controller.KafkaController)
[2020-07-29 00:59:45,066] INFO [RequestSendThread controllerId=0] Controller 0 connected to daniel:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-07-29 00:59:45,067] INFO [Controller id=0] New topics: [Set(worker-manager-.DLT)], deleted topics: [Set()], new partition replica assignment [Map(worker-manager-.DLT-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 00:59:45,067] INFO [Controller id=0] New partition creation callback for worker-manager-.DLT-0 (kafka.controller.KafkaController)
