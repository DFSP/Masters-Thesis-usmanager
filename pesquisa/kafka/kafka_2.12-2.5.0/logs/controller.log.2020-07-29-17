[2020-07-29 17:00:04,474] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 17:00:04,475] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 17:00:04,475] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 17:00:04,475] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 17:05:04,476] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 17:05:04,476] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 17:05:04,478] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 17:05:04,478] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 17:10:04,479] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 17:10:04,480] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 17:10:04,482] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 17:10:04,482] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 17:15:04,482] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 17:15:04,484] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 17:15:04,485] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 17:15:04,485] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 17:20:04,485] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 17:20:04,486] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 17:20:04,487] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 17:20:04,487] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 17:24:49,821] DEBUG [Controller id=0] Delete topics listener fired for topics users to be deleted (kafka.controller.KafkaController)
[2020-07-29 17:24:49,822] INFO [Controller id=0] Starting topic deletion for topics users (kafka.controller.KafkaController)
[2020-07-29 17:24:49,822] INFO [Topic Deletion Manager 0] Handling deletion for topics users (kafka.controller.TopicDeletionManager)
[2020-07-29 17:24:49,822] INFO [Topic Deletion Manager 0] Deletion of topic users (re)started (kafka.controller.TopicDeletionManager)
[2020-07-29 17:24:49,826] INFO [RequestSendThread controllerId=0] Controller 0 connected to daniel:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-07-29 17:24:49,833] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=users,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-29 17:24:49,834] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=users,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-29 17:24:49,857] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(users-0 -> NONE) (kafka.controller.KafkaController)
[2020-07-29 17:24:49,857] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=users,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-07-29 17:24:49,858] INFO [Topic Deletion Manager 0] Handling deletion for topics users (kafka.controller.TopicDeletionManager)
[2020-07-29 17:24:49,882] INFO [Topic Deletion Manager 0] Deletion of topic users successfully completed (kafka.controller.TopicDeletionManager)
[2020-07-29 17:24:49,884] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-07-29 17:24:49,884] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-07-29 17:24:54,587] INFO [Controller id=0] New topics: [Set(users)], deleted topics: [Set()], new partition replica assignment [Map(users-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 17:24:54,588] INFO [Controller id=0] New partition creation callback for users-0 (kafka.controller.KafkaController)
[2020-07-29 17:25:04,487] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 17:25:04,487] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 17:25:04,488] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 17:25:04,488] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 17:25:33,777] DEBUG [Controller id=0] Delete topics listener fired for topics users to be deleted (kafka.controller.KafkaController)
[2020-07-29 17:25:33,777] INFO [Controller id=0] Starting topic deletion for topics users (kafka.controller.KafkaController)
[2020-07-29 17:25:33,777] INFO [Topic Deletion Manager 0] Handling deletion for topics users (kafka.controller.TopicDeletionManager)
[2020-07-29 17:25:33,778] INFO [Topic Deletion Manager 0] Deletion of topic users (re)started (kafka.controller.TopicDeletionManager)
[2020-07-29 17:25:33,782] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=users,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-29 17:25:33,783] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=users,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-29 17:25:33,807] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(users-0 -> NONE) (kafka.controller.KafkaController)
[2020-07-29 17:25:33,807] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=users,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-07-29 17:25:33,807] INFO [Topic Deletion Manager 0] Handling deletion for topics users (kafka.controller.TopicDeletionManager)
[2020-07-29 17:25:33,833] INFO [Topic Deletion Manager 0] Deletion of topic users successfully completed (kafka.controller.TopicDeletionManager)
[2020-07-29 17:25:33,834] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-07-29 17:25:33,835] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-07-29 17:25:43,851] INFO [Controller id=0] New topics: [Set(users)], deleted topics: [Set()], new partition replica assignment [Map(users-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 17:25:43,851] INFO [Controller id=0] New partition creation callback for users-0 (kafka.controller.KafkaController)
[2020-07-29 17:27:35,103] DEBUG [Controller id=0] Delete topics listener fired for topics users to be deleted (kafka.controller.KafkaController)
[2020-07-29 17:27:35,104] INFO [Controller id=0] Starting topic deletion for topics users (kafka.controller.KafkaController)
[2020-07-29 17:27:35,104] INFO [Topic Deletion Manager 0] Handling deletion for topics users (kafka.controller.TopicDeletionManager)
[2020-07-29 17:27:35,104] INFO [Topic Deletion Manager 0] Deletion of topic users (re)started (kafka.controller.TopicDeletionManager)
[2020-07-29 17:27:35,111] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=users,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-29 17:27:35,111] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=users,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-29 17:27:35,134] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(users-0 -> NONE) (kafka.controller.KafkaController)
[2020-07-29 17:27:35,134] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=users,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-07-29 17:27:35,135] INFO [Topic Deletion Manager 0] Handling deletion for topics users (kafka.controller.TopicDeletionManager)
[2020-07-29 17:27:35,149] INFO [Topic Deletion Manager 0] Deletion of topic users successfully completed (kafka.controller.TopicDeletionManager)
[2020-07-29 17:27:35,150] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-07-29 17:27:35,151] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-07-29 17:27:45,340] INFO [Controller id=0] New topics: [Set(users)], deleted topics: [Set()], new partition replica assignment [Map(users-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 17:27:45,340] INFO [Controller id=0] New partition creation callback for users-0 (kafka.controller.KafkaController)
[2020-07-29 17:30:04,491] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 17:30:04,491] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 17:30:04,492] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 17:30:04,492] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 17:35:04,492] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 17:35:04,492] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 17:35:04,493] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 17:35:04,493] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 17:40:04,493] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 17:40:04,494] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 17:40:04,494] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 17:40:04,494] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 17:40:34,227] DEBUG [Controller id=0] Delete topics listener fired for topics users to be deleted (kafka.controller.KafkaController)
[2020-07-29 17:40:34,227] INFO [Controller id=0] Starting topic deletion for topics users (kafka.controller.KafkaController)
[2020-07-29 17:40:34,227] INFO [Topic Deletion Manager 0] Handling deletion for topics users (kafka.controller.TopicDeletionManager)
[2020-07-29 17:40:34,227] INFO [Topic Deletion Manager 0] Deletion of topic users (re)started (kafka.controller.TopicDeletionManager)
[2020-07-29 17:40:34,228] INFO [RequestSendThread controllerId=0] Controller 0 connected to daniel:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-07-29 17:40:34,230] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=users,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-29 17:40:34,231] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=users,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-29 17:40:34,256] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(users-0 -> NONE) (kafka.controller.KafkaController)
[2020-07-29 17:40:34,256] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=users,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-07-29 17:40:34,256] INFO [Topic Deletion Manager 0] Handling deletion for topics users (kafka.controller.TopicDeletionManager)
[2020-07-29 17:40:34,281] INFO [Topic Deletion Manager 0] Deletion of topic users successfully completed (kafka.controller.TopicDeletionManager)
[2020-07-29 17:40:34,281] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-07-29 17:40:34,282] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-07-29 17:40:34,372] INFO [Controller id=0] New topics: [Set(users)], deleted topics: [Set()], new partition replica assignment [Map(users-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-29 17:40:34,372] INFO [Controller id=0] New partition creation callback for users-0 (kafka.controller.KafkaController)
[2020-07-29 17:45:04,494] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 17:45:04,494] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 17:45:04,495] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 17:45:04,495] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 17:50:04,495] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 17:50:04,497] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 17:50:04,498] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 17:50:04,498] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-29 17:55:04,498] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-29 17:55:04,498] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-29 17:55:04,499] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-29 17:55:04,499] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
