[2020-07-30 19:00:45,610] INFO [Controller id=0] New topics: [Set(APPS)], deleted topics: [Set()], new partition replica assignment [Map(APPS-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-30 19:00:45,611] INFO [Controller id=0] New partition creation callback for APPS-0 (kafka.controller.KafkaController)
[2020-07-30 19:00:45,620] INFO [RequestSendThread controllerId=0] Controller 0 connected to daniel:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-07-30 19:00:45,781] INFO [Controller id=0] New topics: [Set(COMPONENT_TYPES)], deleted topics: [Set()], new partition replica assignment [Map(COMPONENT_TYPES-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-30 19:00:45,781] INFO [Controller id=0] New partition creation callback for COMPONENT_TYPES-0 (kafka.controller.KafkaController)
[2020-07-30 19:00:45,907] INFO [Controller id=0] New topics: [Set(CONDITIONS)], deleted topics: [Set()], new partition replica assignment [Map(CONDITIONS-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-30 19:00:45,907] INFO [Controller id=0] New partition creation callback for CONDITIONS-0 (kafka.controller.KafkaController)
[2020-07-30 19:00:46,026] INFO [Controller id=0] New topics: [Set(DECISIONS)], deleted topics: [Set()], new partition replica assignment [Map(DECISIONS-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-30 19:00:46,026] INFO [Controller id=0] New partition creation callback for DECISIONS-0 (kafka.controller.KafkaController)
[2020-07-30 19:00:46,153] INFO [Controller id=0] New topics: [Set(EDGE_HOSTS)], deleted topics: [Set()], new partition replica assignment [Map(EDGE_HOSTS-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-30 19:00:46,153] INFO [Controller id=0] New partition creation callback for EDGE_HOSTS-0 (kafka.controller.KafkaController)
[2020-07-30 19:00:46,280] INFO [Controller id=0] New topics: [Set(FIELDS)], deleted topics: [Set()], new partition replica assignment [Map(FIELDS-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-30 19:00:46,280] INFO [Controller id=0] New partition creation callback for FIELDS-0 (kafka.controller.KafkaController)
[2020-07-30 19:00:46,405] INFO [Controller id=0] New topics: [Set(HOST_RULES)], deleted topics: [Set()], new partition replica assignment [Map(HOST_RULES-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-30 19:00:46,406] INFO [Controller id=0] New partition creation callback for HOST_RULES-0 (kafka.controller.KafkaController)
[2020-07-30 19:00:46,530] INFO [Controller id=0] New topics: [Set(HOST_RULE_CONDITIONS)], deleted topics: [Set()], new partition replica assignment [Map(HOST_RULE_CONDITIONS-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-30 19:00:46,530] INFO [Controller id=0] New partition creation callback for HOST_RULE_CONDITIONS-0 (kafka.controller.KafkaController)
[2020-07-30 19:00:46,656] INFO [Controller id=0] New topics: [Set(OPERATORS)], deleted topics: [Set()], new partition replica assignment [Map(OPERATORS-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-30 19:00:46,656] INFO [Controller id=0] New partition creation callback for OPERATORS-0 (kafka.controller.KafkaController)
[2020-07-30 19:00:46,779] INFO [Controller id=0] New topics: [Set(REGIONS)], deleted topics: [Set()], new partition replica assignment [Map(REGIONS-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-30 19:00:46,779] INFO [Controller id=0] New partition creation callback for REGIONS-0 (kafka.controller.KafkaController)
[2020-07-30 19:00:46,902] INFO [Controller id=0] New topics: [Set(SERVICES)], deleted topics: [Set()], new partition replica assignment [Map(SERVICES-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-30 19:00:46,902] INFO [Controller id=0] New partition creation callback for SERVICES-0 (kafka.controller.KafkaController)
[2020-07-30 19:00:47,029] INFO [Controller id=0] New topics: [Set(SERVICE_DEPENDENCIES)], deleted topics: [Set()], new partition replica assignment [Map(SERVICE_DEPENDENCIES-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-30 19:00:47,029] INFO [Controller id=0] New partition creation callback for SERVICE_DEPENDENCIES-0 (kafka.controller.KafkaController)
[2020-07-30 19:00:47,156] INFO [Controller id=0] New topics: [Set(SERVICE_RULES)], deleted topics: [Set()], new partition replica assignment [Map(SERVICE_RULES-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-30 19:00:47,156] INFO [Controller id=0] New partition creation callback for SERVICE_RULES-0 (kafka.controller.KafkaController)
[2020-07-30 19:00:47,277] INFO [Controller id=0] New topics: [Set(SERVICE_RULE_CONDITIONS)], deleted topics: [Set()], new partition replica assignment [Map(SERVICE_RULE_CONDITIONS-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-30 19:00:47,277] INFO [Controller id=0] New partition creation callback for SERVICE_RULE_CONDITIONS-0 (kafka.controller.KafkaController)
[2020-07-30 19:00:47,403] INFO [Controller id=0] New topics: [Set(USERS)], deleted topics: [Set()], new partition replica assignment [Map(USERS-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-30 19:00:47,403] INFO [Controller id=0] New partition creation callback for USERS-0 (kafka.controller.KafkaController)
[2020-07-30 19:00:47,520] INFO [Controller id=0] New topics: [Set(VALUE_MODES)], deleted topics: [Set()], new partition replica assignment [Map(VALUE_MODES-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-30 19:00:47,520] INFO [Controller id=0] New partition creation callback for VALUE_MODES-0 (kafka.controller.KafkaController)
[2020-07-30 19:02:53,380] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 19:02:53,382] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 19:02:53,382] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-30 19:02:53,382] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 19:05:47,582] INFO [Controller id=0] New topics: [Set(users)], deleted topics: [Set()], new partition replica assignment [Map(users-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-30 19:05:47,582] INFO [Controller id=0] New partition creation callback for users-0 (kafka.controller.KafkaController)
[2020-07-30 19:07:53,383] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 19:07:53,384] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 19:07:53,385] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-30 19:07:53,385] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 19:12:53,385] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 19:12:53,386] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 19:12:53,387] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-30 19:12:53,387] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 19:17:53,387] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 19:17:53,389] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 19:17:53,389] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-30 19:17:53,389] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 19:22:53,390] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 19:22:53,390] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 19:22:53,391] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-30 19:22:53,391] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 19:27:53,391] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 19:27:53,393] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 19:27:53,394] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-30 19:27:53,394] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 19:30:23,019] DEBUG [Controller id=0] Delete topics listener fired for topics USERS to be deleted (kafka.controller.KafkaController)
[2020-07-30 19:30:23,020] INFO [Controller id=0] Starting topic deletion for topics USERS (kafka.controller.KafkaController)
[2020-07-30 19:30:23,024] INFO [Topic Deletion Manager 0] Handling deletion for topics USERS (kafka.controller.TopicDeletionManager)
[2020-07-30 19:30:23,029] INFO [Topic Deletion Manager 0] Deletion of topic USERS (re)started (kafka.controller.TopicDeletionManager)
[2020-07-30 19:30:23,041] INFO [RequestSendThread controllerId=0] Controller 0 connected to daniel:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-07-30 19:30:23,105] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=USERS,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-30 19:30:23,108] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=USERS,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-30 19:30:23,169] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(USERS-0 -> NONE) (kafka.controller.KafkaController)
[2020-07-30 19:30:23,171] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=USERS,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-07-30 19:30:23,172] INFO [Topic Deletion Manager 0] Handling deletion for topics USERS (kafka.controller.TopicDeletionManager)
[2020-07-30 19:30:23,277] INFO [Topic Deletion Manager 0] Deletion of topic USERS successfully completed (kafka.controller.TopicDeletionManager)
[2020-07-30 19:30:23,280] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-07-30 19:30:23,282] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-07-30 19:30:30,753] INFO [Controller id=0] New topics: [Set(USERS)], deleted topics: [Set()], new partition replica assignment [Map(USERS-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-30 19:30:30,753] INFO [Controller id=0] New partition creation callback for USERS-0 (kafka.controller.KafkaController)
[2020-07-30 19:32:53,394] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 19:32:53,396] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 19:32:53,396] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-30 19:32:53,396] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-07-30 19:37:19,862] DEBUG [Controller id=0] Delete topics listener fired for topics USERS to be deleted (kafka.controller.KafkaController)
[2020-07-30 19:37:19,862] INFO [Controller id=0] Starting topic deletion for topics USERS (kafka.controller.KafkaController)
[2020-07-30 19:37:19,862] INFO [Topic Deletion Manager 0] Handling deletion for topics USERS (kafka.controller.TopicDeletionManager)
[2020-07-30 19:37:19,862] INFO [Topic Deletion Manager 0] Deletion of topic USERS (re)started (kafka.controller.TopicDeletionManager)
[2020-07-30 19:37:19,867] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=USERS,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-30 19:37:19,868] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=USERS,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-07-30 19:37:19,882] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(USERS-0 -> NONE) (kafka.controller.KafkaController)
[2020-07-30 19:37:19,882] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=USERS,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-07-30 19:37:19,882] INFO [Topic Deletion Manager 0] Handling deletion for topics USERS (kafka.controller.TopicDeletionManager)
[2020-07-30 19:37:19,911] INFO [Topic Deletion Manager 0] Deletion of topic USERS successfully completed (kafka.controller.TopicDeletionManager)
[2020-07-30 19:37:19,913] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-07-30 19:37:19,913] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-07-30 19:37:23,146] INFO [Controller id=0] New topics: [Set(USERS)], deleted topics: [Set()], new partition replica assignment [Map(USERS-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-07-30 19:37:23,146] INFO [Controller id=0] New partition creation callback for USERS-0 (kafka.controller.KafkaController)
[2020-07-30 19:37:53,397] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-07-30 19:37:53,397] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-07-30 19:37:53,397] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-07-30 19:37:53,397] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
