spring:
  application:
    name: manager-master
  main:
    allow-bean-definition-overriding: true
  datasource:
    driverClassName: org.h2.Driver
    url: jdbc:h2:file:./db/manager-master-db;DB_CLOSE_ON_EXIT=FALSE
    #url: jdbc:h2:mem:manager-master-db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=60000
    username: sa
    password: admin
    platform: h2
  h2:
    console:
      enabled: true
      path: /console
      settings:
        trace: false
        web-allow-others: true
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: false
        show_sql: false
        use_sql_comments: false
server:
  servlet:
    context-path: /api
management:
  endpoints:
    web:
      exposure:
        include: info, health, metrics, mappings
manager:
  master:
    monitor-period: 30000
    tests:
      enabled: ${tests:true}
ssh:
  connection-timeout: 10000
edge:
  access:
    key-file-path: src/main/resources/edge
aws:
  initial-max-instances: 0
  max-retries: 5
  connection-timeout: 180000
  access:
    key: AKIAS5UBHWDI3WO52EV5
    secret-key: ${secret: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}
    key-file-path: src/main/resources/aws/ec2.pem
    username: ubuntu
  instance:
    security-group: default
    key-pair: ec2
    type: t2.micro
    tag: us-manager
container:
  database:
    deploy-delay: 5000
  delay-before-stop: 45000
  monitor-period: 60000
docker:
  install-script: docker-install.sh
  install-script-path: src/main/resources/scripts/docker-install.sh
  uninstall-script: docker-uninstall.sh
  uninstall-script-path: src/main/resources/scripts/docker-uninstall.sh
  install-api-script: docker-api-install.sh
  install-api-script-path: src/main/resources/scripts/docker-api-install.sh
  api:
    port: 2376
  api-proxy:
    username: username
    password: password
    port: 2375
  hub:
    username: usmanager
  swarm:
    manager: ${dockerManager:dpimenta.ddns.net}
    initial-max-workers: 1
registration:
  port: 8761
prometheus:
  node-exporter:
    install-script: node-exporter-install.sh
    install-script-path: src/main/resources/scripts/node-exporter-install.sh
decision:
  resolve-overworked-host-on-events-count: 3
  resolve-underworked-host-on-events-count: 3
  replicate-container-on-event-count: 2
  migrate-container-on-event-count: 2
  stop-container-on-event-count: 3
host:
  maximum-cpu-percentage: 90
  maximum-hosts: 0
  maximum-ram-percentage: 90
  minimum-hosts: 1
  monitor-period: 60000
  local-machine-dns: dpimenta.ddns.net # from www.noip.com, to bypass router's dynamic ip
nginx-load-balancer:
  api-url: /_/nginx-load-balancer-api/api
location-request:
  port: 1919
  minimum-request-count-percentage: 15.0
rules:
  service-rule-template-file: service-rule-template.drl
  host-rule-template-file: host-rule-template.drl
symmetricds:
  tables:
    exclude:
      startsWith: sym, logging, worker
      endsWith: events
      contains: monitoring

#debug: true
#trace: true
#  level:
#    org:
#      hibernate:
#        sql: DEBUG
#      type:
#        descriptor:
#          sql:
#            BasicBinder: TRACE