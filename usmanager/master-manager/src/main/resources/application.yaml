spring:
  application:
    name: master-manager
  datasource:
    driverClassName: org.h2.Driver
    url: jdbc:h2:mem:migration-db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: 'admin'
    platform: h2
  h2:
    console:
      enabled: true
      path: /console
      settings:
        trace: false
        web-allow-others: false
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: false
        show_sql: false
        use_sql_comments: false
aws:
  access:
    key: AKIAIKTSO6FUZZS4WZ4Q
    key-file-path: ${awsAccessKeyFilePath:src/main/resources/aws/ec2.pem}
    secret-key: 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
    username: ubuntu
  instance:
    delay: 10000
    initial-max-instances: 2
    type: t2.micro
container:
  database:
    deploy-delay: 5
  delay-before-stop: 45
  migrate-container-on-event-count: 2
  monitor-period: 60000
  replicate-container-on-event-count: 2
  stop-container-on-event-count: 3
docker:
  api-proxy:
    username: username
    password: password
    port: 2375
  hub:
    username: danielfct
  install-script-path: src/main/resources/scripts/docker-install.sh
  swarm:
    manager: ${dockerManager:127.0.0.1}
    max-workers: 1
eureka:
  port: 8761
host:
  maximum-cpu-percentage: 90
  maximum-hosts: 0
  maximum-ram-percentage: 90
  minimum-hosts: 1
  monitor-period: 60000
  start-host-on-events-count: 3
  stop-host-on-events-count: 3
master-manager:
  monitor-period: 30000
  tests:
    test-logs-enable: ${testLogs:true}
nginx-load-balancer:
  api-url: /_/nginx-load-balancer-api/api
location-request:
  port: 1919
  minimum-request-count-percentage: 15.0
rules:
  service-rule-template-file: service-rule-template.drl
  host-rule-template-file: host-rule-template.drl
#debug: true
#trace: true
logging:
  config: file:src/main/resources/logging/logback-spring.xml