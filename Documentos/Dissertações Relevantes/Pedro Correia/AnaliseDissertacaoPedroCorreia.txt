explicar porque nao pode ser usada a funcionadalidade do docker swarm services:
1. enunciar os modos de gestao de containers feito pelo docker swarm


tipos de metricas:

1. host
 1.1 cpu
 1.2 ram
 1.3 nº de containers

boottime - system boot time
cpu - CPU statistics
diskstats - disk I/O statistics.
filesystem - disk space used
hwmon - hardware monitoring and sensor data
loadavg - load average
meminfo - memory statistics.
netdev - network interface statistics such as bytes transferred.
netstat - network statistics
stat - This includes boot time, forks and interrupts.
textfile - statistics read from local disk
thermal_zone - thermal zone & cooling device statistics
xfs - XFS runtime statistics
zfs - ZFS performance statistics.

2. service
 2.1 tempo medio de resposta aos pedidos (indicador da performance em geral)
 2.2 maior tempos de resposta aos pedidos recebidos (releva as partes da aplicação com má performance)
 2.3 pedidos/segundos (carga da aplicação)

3. container
 3.1 throttled cpu time
 3.2 uso de memoria
 3.3 uso de rede

" precpu_stats": {
	"cpu_usage": {
		"total_usage": 0,
		"percpu_usage": null ,
		" usage_in_kernelmode ": 0,
		" usage_in_usermode ": 0
	}
	" system_cpu_usage ": 0,
	" throttling_data ": {
		"periods": 0,
		" throttled_periods ": 0,
		"throttled_time": 0
	}
},
"cpu_stats": {
	"cpu_usage": {
		"total_usage": 242581854769 ,
		"percpu_usage": [242581854769] ,
		" usage_in_kernelmode ": 33910000000 ,
		" usage_in_usermode ": 123040000000
	},
	" system_cpu_usage ": 3367860000000 ,
	" throttling_data ": {
		"periods": 0,
		" throttled_periods ": 0,
		"throttled_time": 0
	}
},
" memory_stats": {
	"usage": 693821440 ,
	"max_usage": 818733056 ,
	"stats": {
		"active_anon": 282038272 ,
		"active_file": 28938240 ,
		"cache": 82534400 ,
		" hierarchical_memory_limit ": 9223372036854771712 ,
		" hierarchical_memsw_limit ": 9223372036854771712 ,
		"inactive_anon": 329543680 ,
		"inactive_file": 53284864 ,
		"mapped_file": 26558464 ,
		"pgfault": 809513 ,
		"pgmajfault": 2559,
		"pgpgin": 1015608 ,
		"pgpgout": 940757 ,
		"rss": 611270656 ,
		"rss_huge": 136314880 ,
		"swap": 249049088 ,
		" total_active_anon ": 282038272 ,
		" total_active_file ": 28938240 ,
		"total_cache": 82534400 ,
		" total_inactive_anon ": 329543680 ,
		" total_inactive_file ": 53284864 ,
		" total_mapped_file ": 26558464 ,
		"total_pgfault": 809513 ,
		" total_pgmajfault ": 2559,
		"total_pgpgin": 1015608 ,
		"total_pgpgout": 940757 ,
		"total_rss": 611270656 ,
		"total_rss_huge": 136314880 ,
		"total_swap": 249049088 ,
		" total_unevictable ": 0,
		" total_writeback ": 0,
		"unevictable": 0,
		"writeback": 0
	},
	"failcnt": 0,
	"limit": 1044574208
},
"blkio_stats": {
	" io_service_bytes_recursive ": [{
		"major": 8,
		"minor": 0,
		"op": "Read",
		"value": 301649920
	}, {
		"major": 8,
		"minor": 0,
		"op": "Write",
		"value": 248315904
	}, {
		"major": 8,
		"minor": 0,
		"op": "Sync",
		"value": 201003008
	}, {
		"major": 8,
		"minor": 0,
		"op": "Async",
		"value": 348962816
	}, {
		"major": 8,
		"minor": 0,
		"op": "Total",
		"value": 549965824
	}],
	" io_serviced_recursive ": [{
		"major": 8,
		"minor": 0,
		"op": "Read",
		"value": 41771
	}, {
		"major": 8,
		"minor": 0,
		"op": "Write",
		"value": 72796
		}, {
		"major": 8,
		"minor": 0,
		"op": "Sync",
		"value": 61246
	}, {
		"major": 8,
		"minor": 0,
		"op": "Async",
		"value": 53321
	}, {
		"major": 8,
		"minor": 0,
		"op": "Total",
		"value": 114567
	}],
	" io_queue_recursive ": [],
	" io_service_time_recursive ": [],
	" io_wait_time_recursive ": [],
	" io_merged_recursive ": [],
	" io_time_recursive ": [],
	" sectors_recursive ": []
},
"pids_stats": {},
"networks": {
	"eth0": {
		"rx_bytes": 40192 ,
		"rx_packets": 285,
		"rx_errors": 0,
		"rx_dropped": 0,
		"tx_bytes": 222138 ,
		"tx_packets": 150,
		"tx_errors": 0,
		"tx_dropped": 0
	}
}



docker stack deploy para iniciar os serviços iniciais?

evitar base de dados in-memory (h2) nos componentes na edge (como o local manager), em vez disso, usar estruturas de dados (map, list, etc) (pag 70)
usar json ou yaml para guardar as configurações e estado atual
adicionar label monitoring=true aos containers de serviços