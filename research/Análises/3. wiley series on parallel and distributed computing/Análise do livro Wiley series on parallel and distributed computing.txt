(Wiley series on parallel and distributed computing) Buyya, Rajkumar_ Srirama, Satish Narayana - Fog and edge computing_ principles and paradigms-John Wiley & Sons (2019)


Parte 1 Foundations


Capitulo 1 Internet of Things (IoT) and New Computing Paradigms

- 1.1 Introdução aos novos paradigmas relacionados com IoT: indica as possiveis utilizações do IoT, enumera as limitações do cloud-based IoT, e explica as alternativas existentes.
- 1.2 Relevant Technologies
- 1.3 Fog and Edge Computing Completing the Cloud: indica as vantagens da computação fog-edge (SCALE - Security, Cognition, Agility, Latency, Efficiency) e quais são as capacidades dos nós FEC que permitem essas vantagens (SCANC - Storage, Compute, Acceleration, Networking, Control).
- 1.4 Hierarchy of Fog and Edge Computing: indica e explica as três camadas (inner-edge, middle-edge, and outer-edge) onde podem ser colocados os nós FEC. Contém os tipos de dispositivos que podem ser usados como nós FEC.
- 1.5 Business Models: Discute três modelos de negócio identificados - X as a Service, Support Service, Application Service.
- 1.6 Opportunities and Challenges de Fog-Edge computing: Out-of-Box Experience disponiveis atualmente, exemplos de plataformas fog-edge disponiveis e System Management (adjustment é o mais relevante)


Capitulo 2 Addressing the Challenges in Federating Edge Resources

- 2.1 Introduction: problema do controlo e distribuição dos nós fec e possivel solução usando federação. Discussão de networking e gestão da federação (contém imagem que pode ser parcialmente usada)
- 2.2 Networking Challenge
- 2.3 The Management Challenge: Discovery of edge nodes, Deployment of service and applications, Migrating services, Load balancing (EaaS and ENORM frameworks). Current research: Migration of services, monitoring, etc. Future research: Coordinating management task, Developing real-time benchmarking, Facilitating rapid migration, Resource allocation/deallocation for load balancing
- 2.4 Resource challenges (Defined Edge Nodes, Unified Architectures to Account for Heterogeneity, Public Usability of Edge Nodes, Interoperability with Communication Networks, Network Slices for Edge Systems) and modeling challenges. Edge simulator
- 2.5 Conclusions

M. Satyanarayanan. Edge computing: Vision and challenges. IEEE Internet of
Things Journal, 3(5): 637–646, June 2016.
N. Wang, B. Varghese, M. Matthaiou, and D. S. Nikolopoulos. ENORM:
A framework for edge node resource management. IEEE Transactions on
Services Computing, PP(99): 1–1, September 2017.
B. Varghese, N. Wang, S. Barbhuiya, P. Kilpatrick, and D. S. Nikolopoulos.
Challenges and opportunities in edge computing. In Proceedings of the
International Conference on Smart cloud, New York, USA, November
18–20, 2016.
Z. Hao, E. Novak, S. Yi, and Q. Li. Challenges and software archi-
tecture for fog computing. IEEE Internet Computing, 21(2): 44–53,
March 2011.


Capitulo 3 Integrating IoT + Fog + Cloud Infrastructures: System Modeling and Research Challenges

- 3.1 Introdução à Cloud-to-fog-to-things (C2F2T)
- 3.2 Metodologia de pesquisa e revisão de papers
- 3.3 Técnicas de modelação de sistemas C2F2T (Analytical models, Petri Nets, Integer Linear Programs, Others)
- 3.4 Relacionamento de Modelos C2F2T com casos especificos
- 3.5 Relacionamento de Modelos C2F2T com métricas (Energy Consumption, Performance, Resource Consumption, Cost, Quality of Service, Security)
- 3.7 Conclusão


Capitulo 5 Optimization Problems in Fog and Edge Computing

- 5.1 Introdução aos problemas de otimização na fog/edge computing
- 5.2 Trabalho relacionado
- 5.3 Conceitos
- 5.4 The Case for Optimization in Fog Computing
- 5.5 Formal Modeling Framework for Fog Computing
- 5.6 Metrics
- 5.7 Optimization Opportunities along the Fog Architecture
- 5.8 Optimization Opportunities along the Service Life Cycle
- 5.9 Toward a Taxonomy of Optimization Problems in Fog Computing
- 5.10 Optimization Techniques
- 5.11 Future Research Directions


Parte 2 Middlewares


Capitulo 6 Middleware for Fog and Edge Computing: Design Issues

- 6.1 Introduction
- 6.2 Need for Fog and Edge Computing Middleware
- 6.3 Design Goals (Ad-Hoc Device Discovery, Run-Time Execution Environment, Minimal Task Disruption,  Overhead of Operational Parameters, Context-Aware Adaptive Design, Quality of Service)
- 6.4 State-of-the-Art Middleware Infrastructures
- 6.5 System Model (Embedded Sensors or Actuators, Personal Devices, Fog Servers, Cloudlets, Cloud Servers)
- 6.6 Proposed Architecture (API Code, Security, Authentication, Privacy, Encryption, Device Discovery, Middleware)
- 6.7 Case Study Example (perpetrator tracking application)
- 6.8 Future Research Directions
- 6.9 Conclusions


Capitulo 7 A Lightweight Container Middleware for Edge Cloud Architectures

- 7.1 Introduction
- 7.2 Background/Related Work (Edge Cloud Architectures, A Use Case: Modern ski resorts)
- 7.3 Clusters for Lightweight Edge Clouds (Lightweight Software – Containerization, Lightweight Hardware – Raspberry Pi Clusters)
- 7.4 Architecture Management – Storage and Orchestration (OpenStack Storage, Docker Orchestration)
- 7.5 IoT Integration
- 7.6 Security Management for Edge Cloud Architectures (Blockchain)
- 7.7 Future Research Directions
- 7.8 Conclusions


Capitulo 9 Predictive Analysis to Support Fog Application Deployment

- 9.1 Introduction
- 9.2 Motivating Example: Smart Building
- 9.3 Predictive Analysis with FogTorchΠ (seleção de deployments que satisfaçam uma certa % de QoS e até um determinado custo)
- 9.4 Motivating Example
- 9.5 Related Work (Comparing iFogSim and FogTorchΠ)
- 9.6 Future Research Directions
- 9.7 Conclusions






> Informação importante

- Monitorização ao nivel do processo, aplicação e nó

- Preciso de me procupar com o dispositivo fisico (traffic routing nodes ou dedicated nodes) onde serão colocados os containers?

- Profile of users and applications para antecipar utilização e eventos?

- User mobility implica migração de serviços

- Exemplos de aplicações: smart cities, Wireless sensor network (WSN), e-health, traffic management, smart buildings, self-driving cars, autonomous domotics systems, energy production, plants, agricultural lands, supermarkets, embedded AI

- Cloud-to-things (C2T) continuum, Cloud-to-edge/fog-to-things (C2E2T/C2F2T)

- Modelos analiticos VS Petri nets Vs Programação Linear Inteira Vs Outros
Ver se nos papers referidos no livro existe informação importante para chegar à função analitica ótima (Informação resumida na pag. 81)

- Página 90 -> Tabela importante, com resumo das aplicações apresentadas em vários artigos

- Página 92 -> Tabela importante com o uso das métricas para modelar os sitemas, apresentadas em vários artigos

- Página 138 e 139 -> Tabelas com algoritmos de otimização

- Métricas: 
	Mais ou menos fáceis de quantificar:
	- Desempenho (tempo de execução) - global
	- Utilização de recursos (CPU, Memória, Bandwidth) - individual a cada nó
	- Consumo de energia (mais importante nos end devices, menos nos edge nodes, também importane na cloud devido aos custos). Minimzar o impacto ambiental do sistema fog/edge
	- Custos financeiros (uso de energia na efge/cloud, uso de rede). Podem ser fixos ou baseados na utilização
	Dificeis de quantificar:
	- Confiabilidade
	- Segurança
	- Privacidade

- Exemplos: Numa aplicação que requer execuções/respostas rápidas, o objetivo dever
a ser limitar superiormente o tempo de resposta enquanto que o consumo de energia é limitado.
Já numa aplicação que se procupera com a bateria finita e limitada do dispositivo, deve limitar superiormente o consumo de energia, enquanto o tempo de resposta é minimizado.

- 6.3 (pag 146) Apresenta vários tipos de aplicações que podem beneficiar do middleware edge computing

- (pag 147) Sistema: é composto por ad-hoc device discovery, runtime executing environment, minimal task disruption, overhead of operational parameters, context aware adaptive design, quality of service

- Pag 149: Tabela importante com os middlewares existentes atualmente

- Modulos (pag 153):
	- Seleção de dispositivos:
		- Seleção de dispositivos baseada na sua localização e reputação de completar os pedidos/tarefas dos utilizadores
		- Real-time aplications requerem que o pedido seja efetuado num curto espaço de tempo. A seleção dos dispositivo pode ser feita com "incentivized schemes by petri et al. (ref 47, pag 163)"
		- Seleção baseada no contexto (pag 154)
	- Agendamento e gestão de recursos (monitorização da disponibilidade de user devices e vms, monitorização do trabalho atribuido aos nós e edge)
	- Monitorização do contexto e previsão. Usar time series, estocástica, ou machine learning para modelar e prever as mudanças de contexto
	- Execution management (containers, migração, etc)
	- Mobility management (os dados e serviços seguem os dispositivos móveis/users. Uso do protocolo locator/Id separation (LISP))
	- Sensor/actuators são incluidos nos user devices

- Location tracking of the users (ref 51, pag 163), user activity patterns, prediction of user environment, device usage patterns

- Pag 165, 7.1, bom resumo da necessidade da edge computing e soluções do middleware

- Segurança usando tecnologia blockchain? Pag 179

- É possivel usar Raspberry pis como edge devices, na altura dos testes? Usando Hypriot OS, que é baseado no Debian e já contém o Docker CE instalado

- Pag 170, bom resumo sobre containerização

- TOSCA service orchestration standard

- Segurança e arquitetura do swarm cluster - Página 176 "Swarm cluster architecture and security"

- Service discovery (pag 176) - rever a opção de usar service mesh (consul, istio, linkerd, red hat openshift)

- Segurança entre dispositivos/sensores/rede/service provide - tecnologia blockchain (pag 179), consensus algorithm, etc

- Registration/Tracking of devices (pag 204)

- Moreover, determining deployments of a multi-component application to a given fog infrastructure, while satisfying its functional and nonfunctional constraints, is an NP-hard problem (pag 212)

- Associação de requerimentos de software e hardware a cada microserviço: associação do tipo de hardware/software, necessidades de latencia e bandwidth, a cada tipo de microserviço. Para garantir a QoS, o gestor deve garantir esses valores (pag 214)

- Pag 215. Tabela importante que pode ser usada como base para definir os tipos de edge nodes que poderão existir

- Capitulo 9 - uma adaptação do FogTorchΠ e iFogSim pode ser usado para descobrir a melhor estrategia de deployment inicial. Para isso é preciso definir os dispositivos iniciais, bem como as ligações entre eles.

- Explorar as referencias do subcaptiulo 9.5.2 Fog Application Deployment Support, para ver se há algo interessante para incluir no sistema de gestão:
	1. [43] S. Shekhar, A. Chhokra, A. Bhattacharjee, G. Aupy and A. Gokhale, INDICES: Exploiting edge resources for performance-aware cloud-hosted services. In Proceedings of the 1st IEEE International Conference on Fog and Edge Computing, Madrid, Spain, May 14, 2017
	2. ...

- Outros capitulos interessantes para mais tarde ler: 
	Exemplos de aplicações:
		11 Fog Computing Realization for Big Data Analytics, 
		12 Exploiting Fog Computing in Health Monitoring, 
		13 Smart Surveillance Video Stream Processing at the Edge for Real-Time Human Objects Tracking, 
		14 Fog Computing Model for Evolving Smart Transportation Applications, 
		15 Testing Perspectives of Fog-Based IoT Applications, 
	Simulação de uma ambiente edge computing:
		17 Modeling and Simulation of Fog and Edge Computing Environments Using iFogSim Toolkit